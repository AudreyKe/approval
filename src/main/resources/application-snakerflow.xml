<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       default-autowire="byName" default-lazy-init="true">

    <context:component-scan base-package="org.snaker.engine"/>

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" init-method="init">
        <property name="url" value="${datasource.druid.url}"/>
        <!--<property name="url" value="jdbc:mysql://10.83.16.9:3306/approval" />-->
        <property name="username" value="${datasource.druid.username}"/>
        <property name="password" value="${datasource.druid.password}"/>
        <property name="driverClassName" value="${datasource.druid.driver-class-name}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${datasource.druid.timeBetweenEvictionRunsMillis}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${datasource.druid.maxWait}"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${datasource.druid.minIdle}"/>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${datasource.druid.maxActive}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${datasource.druid.initial-size}"/>
        <!--开启sql监听-->
        <property name="filters" value="stat"/>
        <property name="removeAbandoned" value="true"/>
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->
        <property name="removeAbandonedTimeout" value="1800"/>
        <property name="validationQuery" value="SELECT 1"/>
        <property name="testOnBorrow" value="true"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--<property name="configLocation" value="classpath:mybatis.cfg.xml"></property>-->
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="org.snaker.engine.entity"/>
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
    </bean>

    <bean id="engine" class="org.snaker.engine.spring.SpringSnakerEngine">
        <property name="processService" ref="processService"/>
        <property name="orderService" ref="orderService"/>
        <property name="taskService" ref="taskService"/>
        <property name="queryService" ref="queryService"/>
        <property name="managerService" ref="managerService"/>
    </bean>

    <bean id="dbAccess" class="org.snaker.engine.access.mybatis.MybatisAccess">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="processService" class="org.snaker.engine.core.ProcessService">
        <property name="access" ref="dbAccess"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>
    <bean id="orderService" class="org.snaker.engine.core.OrderService">
        <property name="access" ref="dbAccess"/>
    </bean>
    <bean id="taskService" class="org.snaker.engine.core.TaskService">
        <property name="access" ref="dbAccess"/>
    </bean>
    <bean id="managerService" class="org.snaker.engine.core.ManagerService">
        <property name="access" ref="dbAccess"/>
    </bean>
    <bean id="queryService" class="org.snaker.engine.core.QueryService">
        <property name="access" ref="dbAccess"/>
    </bean>
    <bean id="SnakerEngineFacets" class="com.weshareholdings.approval.util.SnakerEngineFacets">
        <property name="access" ref="dbAccess"/>
    </bean>

    <bean id="cacheManager" class="org.snaker.engine.cache.memory.MemoryCacheManager"/>
    <bean class="org.snaker.engine.impl.LogInterceptor"/>
    <bean class="org.snaker.engine.spring.SpelExpression"/>
    <!--委托代理拦截器-->
    <!--<bean class="org.snaker.engine.impl.SurrogateInterceptor"/>-->
    <!--<bean class="com.weshareholdings.approval.handler.SurrogateInterceptor"/>-->

    <!-- 事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="start*" propagation="REQUIRED"/>
            <tx:method name="execute*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="assign*" propagation="REQUIRED"/>
            <tx:method name="create*" propagation="REQUIRED"/>
            <tx:method name="complete*" propagation="REQUIRED"/>
            <tx:method name="finish*" propagation="REQUIRED"/>
            <tx:method name="terminate*" propagation="REQUIRED"/>
            <tx:method name="take*" propagation="REQUIRED"/>
            <tx:method name="deploy*" propagation="REQUIRED"/>
            <tx:method name="undeploy*" propagation="REQUIRED"/>
            <tx:method name="redeploy*" propagation="REQUIRED"/>

            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="search*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="is*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* org.snaker.engine.core..*.*(..))"/>
    </aop:config>
    <aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>
